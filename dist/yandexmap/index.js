"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _url = require("url");

var _httpRequest = _interopRequireDefault(require("../httpRequest"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class YandexMap {
  constructor() {
    this.urlMap = new _url.URL('https://geocode-maps.yandex.ru');
    this.urlMap.pathname = '/1.x/';
    this.urlMap.searchParams.append('format', 'json');
    this.urlMap.searchParams.append('results', '1');
  }

  async getLocation(city) {
    this.urlMap.searchParams.append('geocode', city);
    const answer = await (0, _httpRequest.default)(this.urlMap, {}, null, 'GET');
    const answerParse = JSON.parse(answer);

    if (answerParse.response.GeoObjectCollection.metaDataProperty.GeocoderResponseMetaData.found !== '0') {
      cityParse = answerParse.response.GeoObjectCollection.featureMember[0].GeoObject.metaDataProperty.GeocoderMetaData.text;
      [lon, lat] = answerParse.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos.split(' ');
    }

    this.urlMap.searchParams.delete('geocode', city);
    return [cityParse || 0, lon || 0, lat || 0];
  }

}

var _default = YandexMap;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy95YW5kZXhtYXAvaW5kZXguanMiXSwibmFtZXMiOlsiWWFuZGV4TWFwIiwiY29uc3RydWN0b3IiLCJ1cmxNYXAiLCJVUkwiLCJwYXRobmFtZSIsInNlYXJjaFBhcmFtcyIsImFwcGVuZCIsImdldExvY2F0aW9uIiwiY2l0eSIsImFuc3dlciIsImFuc3dlclBhcnNlIiwiSlNPTiIsInBhcnNlIiwicmVzcG9uc2UiLCJHZW9PYmplY3RDb2xsZWN0aW9uIiwibWV0YURhdGFQcm9wZXJ0eSIsIkdlb2NvZGVyUmVzcG9uc2VNZXRhRGF0YSIsImZvdW5kIiwiY2l0eVBhcnNlIiwiZmVhdHVyZU1lbWJlciIsIkdlb09iamVjdCIsIkdlb2NvZGVyTWV0YURhdGEiLCJ0ZXh0IiwibG9uIiwibGF0IiwiUG9pbnQiLCJwb3MiLCJzcGxpdCIsImRlbGV0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRUEsTUFBTUEsU0FBTixDQUFnQjtBQUNkQyxFQUFBQSxXQUFXLEdBQUc7QUFDWixTQUFLQyxNQUFMLEdBQWMsSUFBSUMsUUFBSixDQUFRLGdDQUFSLENBQWQ7QUFDQSxTQUFLRCxNQUFMLENBQVlFLFFBQVosR0FBdUIsT0FBdkI7QUFDQSxTQUFLRixNQUFMLENBQVlHLFlBQVosQ0FBeUJDLE1BQXpCLENBQWdDLFFBQWhDLEVBQTBDLE1BQTFDO0FBQ0EsU0FBS0osTUFBTCxDQUFZRyxZQUFaLENBQXlCQyxNQUF6QixDQUFnQyxTQUFoQyxFQUEyQyxHQUEzQztBQUNEOztBQUVELFFBQU1DLFdBQU4sQ0FBa0JDLElBQWxCLEVBQXdCO0FBQ3RCLFNBQUtOLE1BQUwsQ0FBWUcsWUFBWixDQUF5QkMsTUFBekIsQ0FBZ0MsU0FBaEMsRUFBMkNFLElBQTNDO0FBQ0EsVUFBTUMsTUFBTSxHQUFHLE1BQU0sMEJBQVksS0FBS1AsTUFBakIsRUFBeUIsRUFBekIsRUFBNkIsSUFBN0IsRUFBbUMsS0FBbkMsQ0FBckI7QUFDQSxVQUFNUSxXQUFXLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXSCxNQUFYLENBQXBCOztBQUNBLFFBQ0VDLFdBQVcsQ0FBQ0csUUFBWixDQUFxQkMsbUJBQXJCLENBQ0dDLGdCQURILENBQ29CQyx3QkFEcEIsQ0FFR0MsS0FGSCxLQUVhLEdBSGYsRUFJRTtBQUNBQyxNQUFBQSxTQUFTLEdBQUdSLFdBQVcsQ0FBQ0csUUFBWixDQUFxQkMsbUJBQXJCLENBQXlDSyxhQUF6QyxDQUF1RCxDQUF2RCxFQUNUQyxTQURTLENBQ0NMLGdCQURELENBQ2tCTSxnQkFEbEIsQ0FDbUNDLElBRC9DO0FBRUEsT0FBQ0MsR0FBRCxFQUFNQyxHQUFOLElBQWFkLFdBQVcsQ0FBQ0csUUFBWixDQUFxQkMsbUJBQXJCLENBQ1ZLLGFBRFUsQ0FDSSxDQURKLEVBQ09DLFNBRFAsQ0FDaUJLLEtBRGpCLENBQ3VCQyxHQUR2QixDQUMyQkMsS0FEM0IsQ0FDaUMsR0FEakMsQ0FBYjtBQUVEOztBQUVELFNBQUt6QixNQUFMLENBQVlHLFlBQVosQ0FBeUJ1QixNQUF6QixDQUFnQyxTQUFoQyxFQUEyQ3BCLElBQTNDO0FBQ0EsV0FBTyxDQUFDVSxTQUFTLElBQUksQ0FBZCxFQUFpQkssR0FBRyxJQUFJLENBQXhCLEVBQTJCQyxHQUFHLElBQUksQ0FBbEMsQ0FBUDtBQUNEOztBQXpCYTs7ZUE0QkR4QixTIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVVJMIH0gZnJvbSAndXJsJztcbmltcG9ydCBodHRwUmVxdWVzdCBmcm9tICcuLi9odHRwUmVxdWVzdCc7XG5cbmNsYXNzIFlhbmRleE1hcCB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMudXJsTWFwID0gbmV3IFVSTCgnaHR0cHM6Ly9nZW9jb2RlLW1hcHMueWFuZGV4LnJ1Jyk7XG4gICAgdGhpcy51cmxNYXAucGF0aG5hbWUgPSAnLzEueC8nO1xuICAgIHRoaXMudXJsTWFwLnNlYXJjaFBhcmFtcy5hcHBlbmQoJ2Zvcm1hdCcsICdqc29uJyk7XG4gICAgdGhpcy51cmxNYXAuc2VhcmNoUGFyYW1zLmFwcGVuZCgncmVzdWx0cycsICcxJyk7XG4gIH1cblxuICBhc3luYyBnZXRMb2NhdGlvbihjaXR5KSB7XG4gICAgdGhpcy51cmxNYXAuc2VhcmNoUGFyYW1zLmFwcGVuZCgnZ2VvY29kZScsIGNpdHkpO1xuICAgIGNvbnN0IGFuc3dlciA9IGF3YWl0IGh0dHBSZXF1ZXN0KHRoaXMudXJsTWFwLCB7fSwgbnVsbCwgJ0dFVCcpO1xuICAgIGNvbnN0IGFuc3dlclBhcnNlID0gSlNPTi5wYXJzZShhbnN3ZXIpO1xuICAgIGlmIChcbiAgICAgIGFuc3dlclBhcnNlLnJlc3BvbnNlLkdlb09iamVjdENvbGxlY3Rpb25cbiAgICAgICAgLm1ldGFEYXRhUHJvcGVydHkuR2VvY29kZXJSZXNwb25zZU1ldGFEYXRhXG4gICAgICAgIC5mb3VuZCAhPT0gJzAnXG4gICAgKSB7XG4gICAgICBjaXR5UGFyc2UgPSBhbnN3ZXJQYXJzZS5yZXNwb25zZS5HZW9PYmplY3RDb2xsZWN0aW9uLmZlYXR1cmVNZW1iZXJbMF1cbiAgICAgICAgLkdlb09iamVjdC5tZXRhRGF0YVByb3BlcnR5Lkdlb2NvZGVyTWV0YURhdGEudGV4dDtcbiAgICAgIFtsb24sIGxhdF0gPSBhbnN3ZXJQYXJzZS5yZXNwb25zZS5HZW9PYmplY3RDb2xsZWN0aW9uXG4gICAgICAgIC5mZWF0dXJlTWVtYmVyWzBdLkdlb09iamVjdC5Qb2ludC5wb3Muc3BsaXQoJyAnKTtcbiAgICB9XG5cbiAgICB0aGlzLnVybE1hcC5zZWFyY2hQYXJhbXMuZGVsZXRlKCdnZW9jb2RlJywgY2l0eSk7XG4gICAgcmV0dXJuIFtjaXR5UGFyc2UgfHwgMCwgbG9uIHx8IDAsIGxhdCB8fCAwXTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBZYW5kZXhNYXA7XG4iXX0=