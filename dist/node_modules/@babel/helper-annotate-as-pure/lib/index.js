"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = annotateAsPure;

function t() {
  const data = _interopRequireWildcard(require("@babel/types"));

  t = function () {
    return data;
  };

  return data;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};

    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};

          if (desc.get || desc.set) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
    }

    newObj.default = obj;
    return newObj;
  }
}

const PURE_ANNOTATION = "#__PURE__";

const isPureAnnotated = ({
  leadingComments
}) => !!leadingComments && leadingComments.some(comment => /[@#]__PURE__/.test(comment.value));

function annotateAsPure(pathOrNode) {
  const node = pathOrNode.node || pathOrNode;

  if (isPureAnnotated(node)) {
    return;
  }

  t().addComment(node, "leading", PURE_ANNOTATION);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9AYmFiZWwvaGVscGVyLWFubm90YXRlLWFzLXB1cmUvbGliL2luZGV4LmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsImFubm90YXRlQXNQdXJlIiwidCIsImRhdGEiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJvYmoiLCJfX2VzTW9kdWxlIiwibmV3T2JqIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldCIsInNldCIsIlBVUkVfQU5OT1RBVElPTiIsImlzUHVyZUFubm90YXRlZCIsImxlYWRpbmdDb21tZW50cyIsInNvbWUiLCJjb21tZW50IiwidGVzdCIsInBhdGhPck5vZGUiLCJub2RlIiwiYWRkQ29tbWVudCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7QUFDM0NDLEVBQUFBLEtBQUssRUFBRTtBQURvQyxDQUE3QztBQUdBRCxPQUFPLENBQUNFLE9BQVIsR0FBa0JDLGNBQWxCOztBQUVBLFNBQVNDLENBQVQsR0FBYTtBQUNYLFFBQU1DLElBQUksR0FBR0MsdUJBQXVCLENBQUNDLE9BQU8sQ0FBQyxjQUFELENBQVIsQ0FBcEM7O0FBRUFILEVBQUFBLENBQUMsR0FBRyxZQUFZO0FBQ2QsV0FBT0MsSUFBUDtBQUNELEdBRkQ7O0FBSUEsU0FBT0EsSUFBUDtBQUNEOztBQUVELFNBQVNDLHVCQUFULENBQWlDRSxHQUFqQyxFQUFzQztBQUFFLE1BQUlBLEdBQUcsSUFBSUEsR0FBRyxDQUFDQyxVQUFmLEVBQTJCO0FBQUUsV0FBT0QsR0FBUDtBQUFhLEdBQTFDLE1BQWdEO0FBQUUsUUFBSUUsTUFBTSxHQUFHLEVBQWI7O0FBQWlCLFFBQUlGLEdBQUcsSUFBSSxJQUFYLEVBQWlCO0FBQUUsV0FBSyxJQUFJRyxHQUFULElBQWdCSCxHQUFoQixFQUFxQjtBQUFFLFlBQUlWLE1BQU0sQ0FBQ2MsU0FBUCxDQUFpQkMsY0FBakIsQ0FBZ0NDLElBQWhDLENBQXFDTixHQUFyQyxFQUEwQ0csR0FBMUMsQ0FBSixFQUFvRDtBQUFFLGNBQUlJLElBQUksR0FBR2pCLE1BQU0sQ0FBQ0MsY0FBUCxJQUF5QkQsTUFBTSxDQUFDa0Isd0JBQWhDLEdBQTJEbEIsTUFBTSxDQUFDa0Isd0JBQVAsQ0FBZ0NSLEdBQWhDLEVBQXFDRyxHQUFyQyxDQUEzRCxHQUF1RyxFQUFsSDs7QUFBc0gsY0FBSUksSUFBSSxDQUFDRSxHQUFMLElBQVlGLElBQUksQ0FBQ0csR0FBckIsRUFBMEI7QUFBRXBCLFlBQUFBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQlcsTUFBdEIsRUFBOEJDLEdBQTlCLEVBQW1DSSxJQUFuQztBQUEyQyxXQUF2RSxNQUE2RTtBQUFFTCxZQUFBQSxNQUFNLENBQUNDLEdBQUQsQ0FBTixHQUFjSCxHQUFHLENBQUNHLEdBQUQsQ0FBakI7QUFBeUI7QUFBRTtBQUFFO0FBQUU7O0FBQUNELElBQUFBLE1BQU0sQ0FBQ1IsT0FBUCxHQUFpQk0sR0FBakI7QUFBc0IsV0FBT0UsTUFBUDtBQUFnQjtBQUFFOztBQUV4ZCxNQUFNUyxlQUFlLEdBQUcsV0FBeEI7O0FBRUEsTUFBTUMsZUFBZSxHQUFHLENBQUM7QUFDdkJDLEVBQUFBO0FBRHVCLENBQUQsS0FFbEIsQ0FBQyxDQUFDQSxlQUFGLElBQXFCQSxlQUFlLENBQUNDLElBQWhCLENBQXFCQyxPQUFPLElBQUksZUFBZUMsSUFBZixDQUFvQkQsT0FBTyxDQUFDdEIsS0FBNUIsQ0FBaEMsQ0FGM0I7O0FBSUEsU0FBU0UsY0FBVCxDQUF3QnNCLFVBQXhCLEVBQW9DO0FBQ2xDLFFBQU1DLElBQUksR0FBR0QsVUFBVSxDQUFDQyxJQUFYLElBQW1CRCxVQUFoQzs7QUFFQSxNQUFJTCxlQUFlLENBQUNNLElBQUQsQ0FBbkIsRUFBMkI7QUFDekI7QUFDRDs7QUFFRHRCLEVBQUFBLENBQUMsR0FBR3VCLFVBQUosQ0FBZUQsSUFBZixFQUFxQixTQUFyQixFQUFnQ1AsZUFBaEM7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gYW5ub3RhdGVBc1B1cmU7XG5cbmZ1bmN0aW9uIHQoKSB7XG4gIGNvbnN0IGRhdGEgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwiQGJhYmVsL3R5cGVzXCIpKTtcblxuICB0ID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBkYXRhO1xuICB9O1xuXG4gIHJldHVybiBkYXRhO1xufVxuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgeyByZXR1cm4gb2JqOyB9IGVsc2UgeyB2YXIgbmV3T2JqID0ge307IGlmIChvYmogIT0gbnVsbCkgeyBmb3IgKHZhciBrZXkgaW4gb2JqKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7IHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9OyBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsgfSBlbHNlIHsgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsgfSB9IH0gfSBuZXdPYmouZGVmYXVsdCA9IG9iajsgcmV0dXJuIG5ld09iajsgfSB9XG5cbmNvbnN0IFBVUkVfQU5OT1RBVElPTiA9IFwiI19fUFVSRV9fXCI7XG5cbmNvbnN0IGlzUHVyZUFubm90YXRlZCA9ICh7XG4gIGxlYWRpbmdDb21tZW50c1xufSkgPT4gISFsZWFkaW5nQ29tbWVudHMgJiYgbGVhZGluZ0NvbW1lbnRzLnNvbWUoY29tbWVudCA9PiAvW0AjXV9fUFVSRV9fLy50ZXN0KGNvbW1lbnQudmFsdWUpKTtcblxuZnVuY3Rpb24gYW5ub3RhdGVBc1B1cmUocGF0aE9yTm9kZSkge1xuICBjb25zdCBub2RlID0gcGF0aE9yTm9kZS5ub2RlIHx8IHBhdGhPck5vZGU7XG5cbiAgaWYgKGlzUHVyZUFubm90YXRlZChub2RlKSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHQoKS5hZGRDb21tZW50KG5vZGUsIFwibGVhZGluZ1wiLCBQVVJFX0FOTk9UQVRJT04pO1xufSJdfQ==