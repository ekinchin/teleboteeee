"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createItemFromDescriptor = createItemFromDescriptor;
exports.createConfigItem = createConfigItem;
exports.getItemDescriptor = getItemDescriptor;

function _path() {
  const data = _interopRequireDefault(require("path"));

  _path = function () {
    return data;
  };

  return data;
}

var _configDescriptors = require("./config-descriptors");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function createItemFromDescriptor(desc) {
  return new ConfigItem(desc);
}

function createConfigItem(value, {
  dirname = ".",
  type
} = {}) {
  const descriptor = (0, _configDescriptors.createDescriptor)(value, _path().default.resolve(dirname), {
    type,
    alias: "programmatic item"
  });
  return createItemFromDescriptor(descriptor);
}

function getItemDescriptor(item) {
  if (item instanceof ConfigItem) {
    return item._descriptor;
  }

  return undefined;
}

class ConfigItem {
  constructor(descriptor) {
    this._descriptor = descriptor;
    Object.defineProperty(this, "_descriptor", {
      enumerable: false
    });
    this.value = this._descriptor.value;
    this.options = this._descriptor.options;
    this.dirname = this._descriptor.dirname;
    this.name = this._descriptor.name;
    this.file = this._descriptor.file ? {
      request: this._descriptor.file.request,
      resolved: this._descriptor.file.resolved
    } : undefined;
    Object.freeze(this);
  }

}

Object.freeze(ConfigItem.prototype);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9AYmFiZWwvY29yZS9saWIvY29uZmlnL2l0ZW0uanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJjcmVhdGVJdGVtRnJvbURlc2NyaXB0b3IiLCJjcmVhdGVDb25maWdJdGVtIiwiZ2V0SXRlbURlc2NyaXB0b3IiLCJfcGF0aCIsImRhdGEiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9jb25maWdEZXNjcmlwdG9ycyIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiZGVzYyIsIkNvbmZpZ0l0ZW0iLCJkaXJuYW1lIiwidHlwZSIsImRlc2NyaXB0b3IiLCJjcmVhdGVEZXNjcmlwdG9yIiwicmVzb2x2ZSIsImFsaWFzIiwiaXRlbSIsIl9kZXNjcmlwdG9yIiwidW5kZWZpbmVkIiwiY29uc3RydWN0b3IiLCJlbnVtZXJhYmxlIiwib3B0aW9ucyIsIm5hbWUiLCJmaWxlIiwicmVxdWVzdCIsInJlc29sdmVkIiwiZnJlZXplIiwicHJvdG90eXBlIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUMzQ0MsRUFBQUEsS0FBSyxFQUFFO0FBRG9DLENBQTdDO0FBR0FELE9BQU8sQ0FBQ0Usd0JBQVIsR0FBbUNBLHdCQUFuQztBQUNBRixPQUFPLENBQUNHLGdCQUFSLEdBQTJCQSxnQkFBM0I7QUFDQUgsT0FBTyxDQUFDSSxpQkFBUixHQUE0QkEsaUJBQTVCOztBQUVBLFNBQVNDLEtBQVQsR0FBaUI7QUFDZixRQUFNQyxJQUFJLEdBQUdDLHNCQUFzQixDQUFDQyxPQUFPLENBQUMsTUFBRCxDQUFSLENBQW5DOztBQUVBSCxFQUFBQSxLQUFLLEdBQUcsWUFBWTtBQUNsQixXQUFPQyxJQUFQO0FBQ0QsR0FGRDs7QUFJQSxTQUFPQSxJQUFQO0FBQ0Q7O0FBRUQsSUFBSUcsa0JBQWtCLEdBQUdELE9BQU8sQ0FBQyxzQkFBRCxDQUFoQzs7QUFFQSxTQUFTRCxzQkFBVCxDQUFnQ0csR0FBaEMsRUFBcUM7QUFBRSxTQUFPQSxHQUFHLElBQUlBLEdBQUcsQ0FBQ0MsVUFBWCxHQUF3QkQsR0FBeEIsR0FBOEI7QUFBRUUsSUFBQUEsT0FBTyxFQUFFRjtBQUFYLEdBQXJDO0FBQXdEOztBQUUvRixTQUFTUix3QkFBVCxDQUFrQ1csSUFBbEMsRUFBd0M7QUFDdEMsU0FBTyxJQUFJQyxVQUFKLENBQWVELElBQWYsQ0FBUDtBQUNEOztBQUVELFNBQVNWLGdCQUFULENBQTBCRixLQUExQixFQUFpQztBQUMvQmMsRUFBQUEsT0FBTyxHQUFHLEdBRHFCO0FBRS9CQyxFQUFBQTtBQUYrQixJQUc3QixFQUhKLEVBR1E7QUFDTixRQUFNQyxVQUFVLEdBQUcsQ0FBQyxHQUFHUixrQkFBa0IsQ0FBQ1MsZ0JBQXZCLEVBQXlDakIsS0FBekMsRUFBZ0RJLEtBQUssR0FBR08sT0FBUixDQUFnQk8sT0FBaEIsQ0FBd0JKLE9BQXhCLENBQWhELEVBQWtGO0FBQ25HQyxJQUFBQSxJQURtRztBQUVuR0ksSUFBQUEsS0FBSyxFQUFFO0FBRjRGLEdBQWxGLENBQW5CO0FBSUEsU0FBT2xCLHdCQUF3QixDQUFDZSxVQUFELENBQS9CO0FBQ0Q7O0FBRUQsU0FBU2IsaUJBQVQsQ0FBMkJpQixJQUEzQixFQUFpQztBQUMvQixNQUFJQSxJQUFJLFlBQVlQLFVBQXBCLEVBQWdDO0FBQzlCLFdBQU9PLElBQUksQ0FBQ0MsV0FBWjtBQUNEOztBQUVELFNBQU9DLFNBQVA7QUFDRDs7QUFFRCxNQUFNVCxVQUFOLENBQWlCO0FBQ2ZVLEVBQUFBLFdBQVcsQ0FBQ1AsVUFBRCxFQUFhO0FBQ3RCLFNBQUtLLFdBQUwsR0FBbUJMLFVBQW5CO0FBQ0FuQixJQUFBQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0IsSUFBdEIsRUFBNEIsYUFBNUIsRUFBMkM7QUFDekMwQixNQUFBQSxVQUFVLEVBQUU7QUFENkIsS0FBM0M7QUFHQSxTQUFLeEIsS0FBTCxHQUFhLEtBQUtxQixXQUFMLENBQWlCckIsS0FBOUI7QUFDQSxTQUFLeUIsT0FBTCxHQUFlLEtBQUtKLFdBQUwsQ0FBaUJJLE9BQWhDO0FBQ0EsU0FBS1gsT0FBTCxHQUFlLEtBQUtPLFdBQUwsQ0FBaUJQLE9BQWhDO0FBQ0EsU0FBS1ksSUFBTCxHQUFZLEtBQUtMLFdBQUwsQ0FBaUJLLElBQTdCO0FBQ0EsU0FBS0MsSUFBTCxHQUFZLEtBQUtOLFdBQUwsQ0FBaUJNLElBQWpCLEdBQXdCO0FBQ2xDQyxNQUFBQSxPQUFPLEVBQUUsS0FBS1AsV0FBTCxDQUFpQk0sSUFBakIsQ0FBc0JDLE9BREc7QUFFbENDLE1BQUFBLFFBQVEsRUFBRSxLQUFLUixXQUFMLENBQWlCTSxJQUFqQixDQUFzQkU7QUFGRSxLQUF4QixHQUdSUCxTQUhKO0FBSUF6QixJQUFBQSxNQUFNLENBQUNpQyxNQUFQLENBQWMsSUFBZDtBQUNEOztBQWZjOztBQW1CakJqQyxNQUFNLENBQUNpQyxNQUFQLENBQWNqQixVQUFVLENBQUNrQixTQUF6QiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5jcmVhdGVJdGVtRnJvbURlc2NyaXB0b3IgPSBjcmVhdGVJdGVtRnJvbURlc2NyaXB0b3I7XG5leHBvcnRzLmNyZWF0ZUNvbmZpZ0l0ZW0gPSBjcmVhdGVDb25maWdJdGVtO1xuZXhwb3J0cy5nZXRJdGVtRGVzY3JpcHRvciA9IGdldEl0ZW1EZXNjcmlwdG9yO1xuXG5mdW5jdGlvbiBfcGF0aCgpIHtcbiAgY29uc3QgZGF0YSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcInBhdGhcIikpO1xuXG4gIF9wYXRoID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBkYXRhO1xuICB9O1xuXG4gIHJldHVybiBkYXRhO1xufVxuXG52YXIgX2NvbmZpZ0Rlc2NyaXB0b3JzID0gcmVxdWlyZShcIi4vY29uZmlnLWRlc2NyaXB0b3JzXCIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBjcmVhdGVJdGVtRnJvbURlc2NyaXB0b3IoZGVzYykge1xuICByZXR1cm4gbmV3IENvbmZpZ0l0ZW0oZGVzYyk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbmZpZ0l0ZW0odmFsdWUsIHtcbiAgZGlybmFtZSA9IFwiLlwiLFxuICB0eXBlXG59ID0ge30pIHtcbiAgY29uc3QgZGVzY3JpcHRvciA9ICgwLCBfY29uZmlnRGVzY3JpcHRvcnMuY3JlYXRlRGVzY3JpcHRvcikodmFsdWUsIF9wYXRoKCkuZGVmYXVsdC5yZXNvbHZlKGRpcm5hbWUpLCB7XG4gICAgdHlwZSxcbiAgICBhbGlhczogXCJwcm9ncmFtbWF0aWMgaXRlbVwiXG4gIH0pO1xuICByZXR1cm4gY3JlYXRlSXRlbUZyb21EZXNjcmlwdG9yKGRlc2NyaXB0b3IpO1xufVxuXG5mdW5jdGlvbiBnZXRJdGVtRGVzY3JpcHRvcihpdGVtKSB7XG4gIGlmIChpdGVtIGluc3RhbmNlb2YgQ29uZmlnSXRlbSkge1xuICAgIHJldHVybiBpdGVtLl9kZXNjcmlwdG9yO1xuICB9XG5cbiAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cblxuY2xhc3MgQ29uZmlnSXRlbSB7XG4gIGNvbnN0cnVjdG9yKGRlc2NyaXB0b3IpIHtcbiAgICB0aGlzLl9kZXNjcmlwdG9yID0gZGVzY3JpcHRvcjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJfZGVzY3JpcHRvclwiLCB7XG4gICAgICBlbnVtZXJhYmxlOiBmYWxzZVxuICAgIH0pO1xuICAgIHRoaXMudmFsdWUgPSB0aGlzLl9kZXNjcmlwdG9yLnZhbHVlO1xuICAgIHRoaXMub3B0aW9ucyA9IHRoaXMuX2Rlc2NyaXB0b3Iub3B0aW9ucztcbiAgICB0aGlzLmRpcm5hbWUgPSB0aGlzLl9kZXNjcmlwdG9yLmRpcm5hbWU7XG4gICAgdGhpcy5uYW1lID0gdGhpcy5fZGVzY3JpcHRvci5uYW1lO1xuICAgIHRoaXMuZmlsZSA9IHRoaXMuX2Rlc2NyaXB0b3IuZmlsZSA/IHtcbiAgICAgIHJlcXVlc3Q6IHRoaXMuX2Rlc2NyaXB0b3IuZmlsZS5yZXF1ZXN0LFxuICAgICAgcmVzb2x2ZWQ6IHRoaXMuX2Rlc2NyaXB0b3IuZmlsZS5yZXNvbHZlZFxuICAgIH0gOiB1bmRlZmluZWQ7XG4gICAgT2JqZWN0LmZyZWV6ZSh0aGlzKTtcbiAgfVxuXG59XG5cbk9iamVjdC5mcmVlemUoQ29uZmlnSXRlbS5wcm90b3R5cGUpOyJdfQ==