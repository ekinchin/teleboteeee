"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = loadBlockHoistPlugin;

function _sortBy() {
  const data = _interopRequireDefault(require("lodash/sortBy"));

  _sortBy = function () {
    return data;
  };

  return data;
}

var _config = _interopRequireDefault(require("../config"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

let LOADED_PLUGIN;

function loadBlockHoistPlugin() {
  if (!LOADED_PLUGIN) {
    const config = (0, _config.default)({
      babelrc: false,
      configFile: false,
      plugins: [blockHoistPlugin]
    });
    LOADED_PLUGIN = config ? config.passes[0][0] : undefined;
    if (!LOADED_PLUGIN) throw new Error("Assertion failure");
  }

  return LOADED_PLUGIN;
}

const blockHoistPlugin = {
  name: "internal.blockHoist",
  visitor: {
    Block: {
      exit({
        node
      }) {
        let hasChange = false;

        for (let i = 0; i < node.body.length; i++) {
          const bodyNode = node.body[i];

          if (bodyNode && bodyNode._blockHoist != null) {
            hasChange = true;
            break;
          }
        }

        if (!hasChange) return;
        node.body = (0, _sortBy().default)(node.body, function (bodyNode) {
          let priority = bodyNode && bodyNode._blockHoist;
          if (priority == null) priority = 1;
          if (priority === true) priority = 2;
          return -1 * priority;
        });
      }

    }
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9AYmFiZWwvY29yZS9saWIvdHJhbnNmb3JtYXRpb24vYmxvY2staG9pc3QtcGx1Z2luLmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsImxvYWRCbG9ja0hvaXN0UGx1Z2luIiwiX3NvcnRCeSIsImRhdGEiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9jb25maWciLCJvYmoiLCJfX2VzTW9kdWxlIiwiTE9BREVEX1BMVUdJTiIsImNvbmZpZyIsImJhYmVscmMiLCJjb25maWdGaWxlIiwicGx1Z2lucyIsImJsb2NrSG9pc3RQbHVnaW4iLCJwYXNzZXMiLCJ1bmRlZmluZWQiLCJFcnJvciIsIm5hbWUiLCJ2aXNpdG9yIiwiQmxvY2siLCJleGl0Iiwibm9kZSIsImhhc0NoYW5nZSIsImkiLCJib2R5IiwibGVuZ3RoIiwiYm9keU5vZGUiLCJfYmxvY2tIb2lzdCIsInByaW9yaXR5Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUMzQ0MsRUFBQUEsS0FBSyxFQUFFO0FBRG9DLENBQTdDO0FBR0FELE9BQU8sQ0FBQ0UsT0FBUixHQUFrQkMsb0JBQWxCOztBQUVBLFNBQVNDLE9BQVQsR0FBbUI7QUFDakIsUUFBTUMsSUFBSSxHQUFHQyxzQkFBc0IsQ0FBQ0MsT0FBTyxDQUFDLGVBQUQsQ0FBUixDQUFuQzs7QUFFQUgsRUFBQUEsT0FBTyxHQUFHLFlBQVk7QUFDcEIsV0FBT0MsSUFBUDtBQUNELEdBRkQ7O0FBSUEsU0FBT0EsSUFBUDtBQUNEOztBQUVELElBQUlHLE9BQU8sR0FBR0Ysc0JBQXNCLENBQUNDLE9BQU8sQ0FBQyxXQUFELENBQVIsQ0FBcEM7O0FBRUEsU0FBU0Qsc0JBQVQsQ0FBZ0NHLEdBQWhDLEVBQXFDO0FBQUUsU0FBT0EsR0FBRyxJQUFJQSxHQUFHLENBQUNDLFVBQVgsR0FBd0JELEdBQXhCLEdBQThCO0FBQUVQLElBQUFBLE9BQU8sRUFBRU87QUFBWCxHQUFyQztBQUF3RDs7QUFFL0YsSUFBSUUsYUFBSjs7QUFFQSxTQUFTUixvQkFBVCxHQUFnQztBQUM5QixNQUFJLENBQUNRLGFBQUwsRUFBb0I7QUFDbEIsVUFBTUMsTUFBTSxHQUFHLENBQUMsR0FBR0osT0FBTyxDQUFDTixPQUFaLEVBQXFCO0FBQ2xDVyxNQUFBQSxPQUFPLEVBQUUsS0FEeUI7QUFFbENDLE1BQUFBLFVBQVUsRUFBRSxLQUZzQjtBQUdsQ0MsTUFBQUEsT0FBTyxFQUFFLENBQUNDLGdCQUFEO0FBSHlCLEtBQXJCLENBQWY7QUFLQUwsSUFBQUEsYUFBYSxHQUFHQyxNQUFNLEdBQUdBLE1BQU0sQ0FBQ0ssTUFBUCxDQUFjLENBQWQsRUFBaUIsQ0FBakIsQ0FBSCxHQUF5QkMsU0FBL0M7QUFDQSxRQUFJLENBQUNQLGFBQUwsRUFBb0IsTUFBTSxJQUFJUSxLQUFKLENBQVUsbUJBQVYsQ0FBTjtBQUNyQjs7QUFFRCxTQUFPUixhQUFQO0FBQ0Q7O0FBRUQsTUFBTUssZ0JBQWdCLEdBQUc7QUFDdkJJLEVBQUFBLElBQUksRUFBRSxxQkFEaUI7QUFFdkJDLEVBQUFBLE9BQU8sRUFBRTtBQUNQQyxJQUFBQSxLQUFLLEVBQUU7QUFDTEMsTUFBQUEsSUFBSSxDQUFDO0FBQ0hDLFFBQUFBO0FBREcsT0FBRCxFQUVEO0FBQ0QsWUFBSUMsU0FBUyxHQUFHLEtBQWhCOztBQUVBLGFBQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0YsSUFBSSxDQUFDRyxJQUFMLENBQVVDLE1BQTlCLEVBQXNDRixDQUFDLEVBQXZDLEVBQTJDO0FBQ3pDLGdCQUFNRyxRQUFRLEdBQUdMLElBQUksQ0FBQ0csSUFBTCxDQUFVRCxDQUFWLENBQWpCOztBQUVBLGNBQUlHLFFBQVEsSUFBSUEsUUFBUSxDQUFDQyxXQUFULElBQXdCLElBQXhDLEVBQThDO0FBQzVDTCxZQUFBQSxTQUFTLEdBQUcsSUFBWjtBQUNBO0FBQ0Q7QUFDRjs7QUFFRCxZQUFJLENBQUNBLFNBQUwsRUFBZ0I7QUFDaEJELFFBQUFBLElBQUksQ0FBQ0csSUFBTCxHQUFZLENBQUMsR0FBR3ZCLE9BQU8sR0FBR0YsT0FBZCxFQUF1QnNCLElBQUksQ0FBQ0csSUFBNUIsRUFBa0MsVUFBVUUsUUFBVixFQUFvQjtBQUNoRSxjQUFJRSxRQUFRLEdBQUdGLFFBQVEsSUFBSUEsUUFBUSxDQUFDQyxXQUFwQztBQUNBLGNBQUlDLFFBQVEsSUFBSSxJQUFoQixFQUFzQkEsUUFBUSxHQUFHLENBQVg7QUFDdEIsY0FBSUEsUUFBUSxLQUFLLElBQWpCLEVBQXVCQSxRQUFRLEdBQUcsQ0FBWDtBQUN2QixpQkFBTyxDQUFDLENBQUQsR0FBS0EsUUFBWjtBQUNELFNBTFcsQ0FBWjtBQU1EOztBQXRCSTtBQURBO0FBRmMsQ0FBekIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGxvYWRCbG9ja0hvaXN0UGx1Z2luO1xuXG5mdW5jdGlvbiBfc29ydEJ5KCkge1xuICBjb25zdCBkYXRhID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwibG9kYXNoL3NvcnRCeVwiKSk7XG5cbiAgX3NvcnRCeSA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZGF0YTtcbiAgfTtcblxuICByZXR1cm4gZGF0YTtcbn1cblxudmFyIF9jb25maWcgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi9jb25maWdcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5sZXQgTE9BREVEX1BMVUdJTjtcblxuZnVuY3Rpb24gbG9hZEJsb2NrSG9pc3RQbHVnaW4oKSB7XG4gIGlmICghTE9BREVEX1BMVUdJTikge1xuICAgIGNvbnN0IGNvbmZpZyA9ICgwLCBfY29uZmlnLmRlZmF1bHQpKHtcbiAgICAgIGJhYmVscmM6IGZhbHNlLFxuICAgICAgY29uZmlnRmlsZTogZmFsc2UsXG4gICAgICBwbHVnaW5zOiBbYmxvY2tIb2lzdFBsdWdpbl1cbiAgICB9KTtcbiAgICBMT0FERURfUExVR0lOID0gY29uZmlnID8gY29uZmlnLnBhc3Nlc1swXVswXSA6IHVuZGVmaW5lZDtcbiAgICBpZiAoIUxPQURFRF9QTFVHSU4pIHRocm93IG5ldyBFcnJvcihcIkFzc2VydGlvbiBmYWlsdXJlXCIpO1xuICB9XG5cbiAgcmV0dXJuIExPQURFRF9QTFVHSU47XG59XG5cbmNvbnN0IGJsb2NrSG9pc3RQbHVnaW4gPSB7XG4gIG5hbWU6IFwiaW50ZXJuYWwuYmxvY2tIb2lzdFwiLFxuICB2aXNpdG9yOiB7XG4gICAgQmxvY2s6IHtcbiAgICAgIGV4aXQoe1xuICAgICAgICBub2RlXG4gICAgICB9KSB7XG4gICAgICAgIGxldCBoYXNDaGFuZ2UgPSBmYWxzZTtcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG5vZGUuYm9keS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGNvbnN0IGJvZHlOb2RlID0gbm9kZS5ib2R5W2ldO1xuXG4gICAgICAgICAgaWYgKGJvZHlOb2RlICYmIGJvZHlOb2RlLl9ibG9ja0hvaXN0ICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhhc0NoYW5nZSA9IHRydWU7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIWhhc0NoYW5nZSkgcmV0dXJuO1xuICAgICAgICBub2RlLmJvZHkgPSAoMCwgX3NvcnRCeSgpLmRlZmF1bHQpKG5vZGUuYm9keSwgZnVuY3Rpb24gKGJvZHlOb2RlKSB7XG4gICAgICAgICAgbGV0IHByaW9yaXR5ID0gYm9keU5vZGUgJiYgYm9keU5vZGUuX2Jsb2NrSG9pc3Q7XG4gICAgICAgICAgaWYgKHByaW9yaXR5ID09IG51bGwpIHByaW9yaXR5ID0gMTtcbiAgICAgICAgICBpZiAocHJpb3JpdHkgPT09IHRydWUpIHByaW9yaXR5ID0gMjtcbiAgICAgICAgICByZXR1cm4gLTEgKiBwcmlvcml0eTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICB9XG4gIH1cbn07Il19